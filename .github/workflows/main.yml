name: CI

on:
  push:
    paths:
      - '**.py'
      - '*Dockerfile'
      - 'requirements.txt'
      - 'environment.yml'
      - '.github**/'
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

jobs:
  build-main-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Upload docker image
        run: |
          IMAGE=$GITHUB_REPOSITORY
          TAG=$GITHUB_SHA-$GITHUB_RUN_ID
          docker build -t $IMAGE:$TAG .
          docker push $IMAGE:$TAG
          docker tag $IMAGE:$TAG $IMAGE:latest
          docker push $IMAGE:latest
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          docker tag $IMAGE:$TAG $IMAGE:$BRANCH
          docker push $IMAGE:$BRANCH
      - name: Fetch articles data
        run: |
          docker run -w /workdir -v $(pwd):/workdir piotrpersona/spyder:latest -o $GITHUB_SHA.json
      - name: Upload artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: $GITHUB_REPOSITORY
          # A personal access token for the GitHub repository in which the release will be created and edited.
          # It is recommended to create the access token with the following scopes: `repo, user, admin:repo_hook`.
          repo_token: ${{ secrets.UPSTREAM_PERSONAL_ACCESS_TOKEN }}
          file: $GITHUB_SHA.json
          asset_name: articles
          tag: ${{ github.ref }}
          overwrite: true
          body: "NLP Articles data"
